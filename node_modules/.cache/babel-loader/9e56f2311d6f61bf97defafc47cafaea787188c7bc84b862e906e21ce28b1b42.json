{"ast":null,"code":"import { __rest } from 'tslib';\nimport { visualElement, checkTargetForNewValues, createBox } from 'framer-motion';\nimport { setThreeValue } from './utils/set-value.mjs';\nimport { readThreeValue } from './utils/read-value.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-value.mjs';\nvar createRenderState = function () {\n  return {};\n};\nvar threeVisualElement = visualElement({\n  treeType: \"three\",\n  readValueFromInstance: readThreeValue,\n  getBaseTarget: function () {\n    return undefined;\n  },\n  sortNodePosition: function (a, b) {\n    return a.id - b.id;\n  },\n  makeTargetAnimatable: function (element, _a) {\n    _a.transition;\n    var target = __rest(_a, [\"transition\"]);\n    checkTargetForNewValues(element, target, {});\n    return target;\n  },\n  restoreTransform: function () {},\n  resetTransform: function () {},\n  removeValueFromRenderState: function (_key, _renderState) {},\n  measureViewportBox: createBox,\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, state, latestValues) {\n    for (var key in latestValues) {\n      state[key] = latestValues[key];\n    }\n  },\n  render: function (instance, renderState) {\n    for (var key in renderState) {\n      setThreeValue(instance, key, renderState);\n    }\n  }\n});\nvar createVisualElement = function (_, options) {\n  return threeVisualElement(options);\n};\nexport { createRenderState, createVisualElement, threeVisualElement };","map":{"version":3,"names":["__rest","visualElement","checkTargetForNewValues","createBox","setThreeValue","readThreeValue","scrapeMotionValuesFromProps","createRenderState","threeVisualElement","treeType","readValueFromInstance","getBaseTarget","undefined","sortNodePosition","a","b","id","makeTargetAnimatable","element","_a","transition","target","restoreTransform","resetTransform","removeValueFromRenderState","_key","_renderState","measureViewportBox","build","_element","state","latestValues","key","render","instance","renderState","createVisualElement","_","options"],"sources":["C:/Users/emran/Documents/GitHub/Framer-Motion-3D-Shapes-button-R3F/node_modules/framer-motion-3d/dist/es/render/create-visual-element.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { visualElement, checkTargetForNewValues, createBox } from 'framer-motion';\nimport { setThreeValue } from './utils/set-value.mjs';\nimport { readThreeValue } from './utils/read-value.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-value.mjs';\n\nvar createRenderState = function () { return ({}); };\nvar threeVisualElement = visualElement({\n    treeType: \"three\",\n    readValueFromInstance: readThreeValue,\n    getBaseTarget: function () {\n        return undefined;\n    },\n    sortNodePosition: function (a, b) {\n        return a.id - b.id;\n    },\n    makeTargetAnimatable: function (element, _a) {\n        _a.transition; var target = __rest(_a, [\"transition\"]);\n        checkTargetForNewValues(element, target, {});\n        return target;\n    },\n    restoreTransform: function () { },\n    resetTransform: function () { },\n    removeValueFromRenderState: function (_key, _renderState) { },\n    measureViewportBox: createBox,\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, state, latestValues) {\n        for (var key in latestValues) {\n            state[key] = latestValues[key];\n        }\n    },\n    render: function (instance, renderState) {\n        for (var key in renderState) {\n            setThreeValue(instance, key, renderState);\n        }\n    },\n});\nvar createVisualElement = function (_, options) {\n    return threeVisualElement(options);\n};\n\nexport { createRenderState, createVisualElement, threeVisualElement };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,aAAa,EAAEC,uBAAuB,EAAEC,SAAS,QAAQ,eAAe;AACjF,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,2BAA2B,QAAQ,iCAAiC;AAE7E,IAAIC,iBAAiB,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAQ,CAAC,CAAC;AAAG,CAAC;AACpD,IAAIC,kBAAkB,GAAGP,aAAa,CAAC;EACnCQ,QAAQ,EAAE,OAAO;EACjBC,qBAAqB,EAAEL,cAAc;EACrCM,aAAa,EAAE,SAAAA,CAAA,EAAY;IACvB,OAAOC,SAAS;EACpB,CAAC;EACDC,gBAAgB,EAAE,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAC9B,OAAOD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE;EACtB,CAAC;EACDC,oBAAoB,EAAE,SAAAA,CAAUC,OAAO,EAAEC,EAAE,EAAE;IACzCA,EAAE,CAACC,UAAU;IAAE,IAAIC,MAAM,GAAGrB,MAAM,CAACmB,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;IACtDjB,uBAAuB,CAACgB,OAAO,EAAEG,MAAM,EAAE,CAAC,CAAC,CAAC;IAC5C,OAAOA,MAAM;EACjB,CAAC;EACDC,gBAAgB,EAAE,SAAAA,CAAA,EAAY,CAAE,CAAC;EACjCC,cAAc,EAAE,SAAAA,CAAA,EAAY,CAAE,CAAC;EAC/BC,0BAA0B,EAAE,SAAAA,CAAUC,IAAI,EAAEC,YAAY,EAAE,CAAE,CAAC;EAC7DC,kBAAkB,EAAExB,SAAS;EAC7BG,2BAA2B,EAAEA,2BAA2B;EACxDsB,KAAK,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,KAAK,EAAEC,YAAY,EAAE;IAC5C,KAAK,IAAIC,GAAG,IAAID,YAAY,EAAE;MAC1BD,KAAK,CAACE,GAAG,CAAC,GAAGD,YAAY,CAACC,GAAG,CAAC;IAClC;EACJ,CAAC;EACDC,MAAM,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,WAAW,EAAE;IACrC,KAAK,IAAIH,GAAG,IAAIG,WAAW,EAAE;MACzB/B,aAAa,CAAC8B,QAAQ,EAAEF,GAAG,EAAEG,WAAW,CAAC;IAC7C;EACJ;AACJ,CAAC,CAAC;AACF,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,CAAC,EAAEC,OAAO,EAAE;EAC5C,OAAO9B,kBAAkB,CAAC8B,OAAO,CAAC;AACtC,CAAC;AAED,SAAS/B,iBAAiB,EAAE6B,mBAAmB,EAAE5B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}