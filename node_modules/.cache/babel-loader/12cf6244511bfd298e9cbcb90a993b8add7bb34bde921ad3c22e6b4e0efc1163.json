{"ast":null,"code":"import { __assign } from 'tslib';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { motion } from '../render/motion.mjs';\nimport { useLayoutCamera } from './use-layout-camera.mjs';\nvar LayoutOrthographicCamera = React.forwardRef(function (props, ref) {\n  var _a = useLayoutCamera(props, function (newSize) {\n      var cam = cameraRef.current;\n      if (cam) {\n        cam.left = newSize.width / -2;\n        cam.right = newSize.width / 2;\n        cam.top = newSize.height / 2;\n        cam.bottom = newSize.height / -2;\n        cam.updateProjectionMatrix();\n      }\n    }),\n    size = _a.size,\n    cameraRef = _a.cameraRef;\n  return React.createElement(motion.orthographicCamera, __assign({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\nexport { LayoutOrthographicCamera };","map":{"version":3,"names":["__assign","React","mergeRefs","motion","useLayoutCamera","LayoutOrthographicCamera","forwardRef","props","ref","_a","newSize","cam","cameraRef","current","left","width","right","top","height","bottom","updateProjectionMatrix","size","createElement","orthographicCamera"],"sources":["C:/Users/emran/Documents/GitHub/Framer-Motion-3D-Shapes-button-R3F/node_modules/framer-motion-3d/dist/es/components/LayoutOrthographicCamera.mjs"],"sourcesContent":["import { __assign } from 'tslib';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { motion } from '../render/motion.mjs';\nimport { useLayoutCamera } from './use-layout-camera.mjs';\n\nvar LayoutOrthographicCamera = React.forwardRef(function (props, ref) {\n    var _a = useLayoutCamera(props, function (newSize) {\n        var cam = cameraRef.current;\n        if (cam) {\n            cam.left = newSize.width / -2;\n            cam.right = newSize.width / 2;\n            cam.top = newSize.height / 2;\n            cam.bottom = newSize.height / -2;\n            cam.updateProjectionMatrix();\n        }\n    }), size = _a.size, cameraRef = _a.cameraRef;\n    return (React.createElement(motion.orthographicCamera, __assign({ left: size.width / -2, right: size.width / 2, top: size.height / 2, bottom: size.height / -2, ref: mergeRefs([cameraRef, ref]) }, props)));\n});\n\nexport { LayoutOrthographicCamera };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,eAAe,QAAQ,yBAAyB;AAEzD,IAAIC,wBAAwB,GAAGJ,KAAK,CAACK,UAAU,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;EAClE,IAAIC,EAAE,GAAGL,eAAe,CAACG,KAAK,EAAE,UAAUG,OAAO,EAAE;MAC/C,IAAIC,GAAG,GAAGC,SAAS,CAACC,OAAO;MAC3B,IAAIF,GAAG,EAAE;QACLA,GAAG,CAACG,IAAI,GAAGJ,OAAO,CAACK,KAAK,GAAG,CAAC,CAAC;QAC7BJ,GAAG,CAACK,KAAK,GAAGN,OAAO,CAACK,KAAK,GAAG,CAAC;QAC7BJ,GAAG,CAACM,GAAG,GAAGP,OAAO,CAACQ,MAAM,GAAG,CAAC;QAC5BP,GAAG,CAACQ,MAAM,GAAGT,OAAO,CAACQ,MAAM,GAAG,CAAC,CAAC;QAChCP,GAAG,CAACS,sBAAsB,CAAC,CAAC;MAChC;IACJ,CAAC,CAAC;IAAEC,IAAI,GAAGZ,EAAE,CAACY,IAAI;IAAET,SAAS,GAAGH,EAAE,CAACG,SAAS;EAC5C,OAAQX,KAAK,CAACqB,aAAa,CAACnB,MAAM,CAACoB,kBAAkB,EAAEvB,QAAQ,CAAC;IAAEc,IAAI,EAAEO,IAAI,CAACN,KAAK,GAAG,CAAC,CAAC;IAAEC,KAAK,EAAEK,IAAI,CAACN,KAAK,GAAG,CAAC;IAAEE,GAAG,EAAEI,IAAI,CAACH,MAAM,GAAG,CAAC;IAAEC,MAAM,EAAEE,IAAI,CAACH,MAAM,GAAG,CAAC,CAAC;IAAEV,GAAG,EAAEN,SAAS,CAAC,CAACU,SAAS,EAAEJ,GAAG,CAAC;EAAE,CAAC,EAAED,KAAK,CAAC,CAAC;AAC/M,CAAC,CAAC;AAEF,SAASF,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}